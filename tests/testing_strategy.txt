tmp_path: C:\Users\vdolgov\AppData\Local\Temp\pytest-of-vdolgov\

pytest -v -k "test_obsolete" --cov=dbOperations --cov-report=html

dbOperations:
    * проверить создание БД create_database()
        * корректный DBPath
        * некорректный DBPath
        ? сделать проверки для windows и для linux
        ? сделать проверки для разных типов баз данных

    * проверить создание таблицы create_table()

    * проверить добавление нового пользователя insert_new_user()
        * добавляем пользователя с полностью корректными данными
          добавляем пользователя у которого часть данных корректны, части данных нет (в текущей реализации с positional parameters это будет ERROR)
        * добавляем пользователя с некорректным типом данных, например telegram_id = str
        * добавляем пользователя с неуникальным telegram_id

    * проверить получение данных пользователя get_user_preferences()
        * получаем данные по существующему telegram_id
        * получаем данные по несуществующему telegram_id типа int
          получаем данные по несуществующему telegram_id некорректного типа str (в текущей реализации на любую ошибку вернется None)

    * проверить обновление параметров пользователя update_user_preferences()
        * обновляем данные существующего пользователя корректными значениями
          обновляем данные несуществующего пользователя корректными значениями (SQLAlchemy ничто не обновит, но все равно отработает так будто бы результат успешный)
        * обновляем данные существующего пользователя некорректными значениями

    * проверить удаление пользователя delete_user()
        * удаляем существующего пользователя
          удаляем несуществующего пользователя по telegram_id корректного типа int (SQLAlchemy не выдаст ошибки)
        * удаляем несуществующего пользователя по telegram_id некорректного типа str

quizAggregator:
    * createInfoByCity()
        * передаем на вход None
          передаем на вход город, которого нет в CityDict
        * передаем на вход город, который есть в CityDict
            * проверить корректность возвращаемого cityBars
            * проверить корректность возвращаемого cityOrganizators
            * проверить корректность возвращаемого cityLinks

    * assignThemesToQuiz()
        * передаем на вход None, None
        * передаем на вход organizator = 'Лига Индиго'
            * проверяем формат 'Игра №2 Сезон №7'
        * передаем на вход organizator = {другой организатор}
            * проверяем что тэг подставился во всех нужных случаях
            * проверяем что тэг не подставился когда не должен был

    * collectQuizData()
        * выставляем тестовую дату и передаем в cityLinks ссылки на локальные копии html-страниц организаторов
            * передаем на вход неверные параметры kwargs (не хватает параметров/ параметры названы неправильно)
            * передаем в cityOrganizators несуществующего организатора
            * передаем в cityOrganizators 'Квиз Плиз' / 'Лига Индиго' / 'WOW Quiz/ Эйнштейн Party'/ 'Мама Квиз'
                * проверяем что извлеклись все N квизов
                * проверяем что корректно извлечено название квиза
                * проверяем что корректно извлечено место проведения квиза
                * проверяем что корректно извлечено время проведения квиза
                    - отдельное правило для Максимиланса (только Квиз Плиз) (пока не было случая сохранить HTML с такой игрой)
                ! проверяем что извлеклась цена (пока не извлекается)
                * проверяем что были отброшены неподходящие игры (нет мест, инвайты, время проведения прошло)
                * проверяем корректное формирование словаря games
                * проверяем намеренные organizatorErrors

        * выставляем реальную дату и передаем в cityLinks реальные ссылки на веб-страницы организаторов
            * проверяем что собралось более 0 игр
            * проверяем на наличие organizatorErrors для каждого организатора в отдельности

    - createQuizList()
        * проверить корректность сортировки по дате
        * проверить корректность фильтрация по DOW
        * проверить корректность фильтрация по SelectedTheme
        * проверить корректность фильтрация по excl_bar
        * проверить корректность фильтрация по excl_theme
        * проверить корректность фильтрация по excl_orgs
        * проверить ситуацию с наличием organizatorErrors
        * проверить quizList на соответствие ожидаемому формату данных



telegramBot:


интеграция:
 - проверить что будет если нет папки app_db
 - проверить что будет если нет файла с БД
